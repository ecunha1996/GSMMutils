Search.setIndex({"docnames": ["GSMMutils", "GSMMutils.annotation", "GSMMutils.api", "GSMMutils.bio", "GSMMutils.dynamic", "GSMMutils.experimental", "GSMMutils.graphics", "GSMMutils.io", "GSMMutils.model", "GSMMutils.omics", "GSMMutils.stats", "GSMMutils.utils", "index", "modules", "readme"], "filenames": ["GSMMutils.rst", "GSMMutils.annotation.rst", "GSMMutils.api.rst", "GSMMutils.bio.rst", "GSMMutils.dynamic.rst", "GSMMutils.experimental.rst", "GSMMutils.graphics.rst", "GSMMutils.io.rst", "GSMMutils.model.rst", "GSMMutils.omics.rst", "GSMMutils.stats.rst", "GSMMutils.utils.rst", "index.rst", "modules.rst", "readme.rst"], "titles": ["gsmmutils package", "gsmmutils.annotation package", "gsmmutils.api package", "gsmmutils.bio package", "gsmmutils.dynamic package", "gsmmutils.experimental package", "gsmmutils.graphics package", "gsmmutils.io package", "gsmmutils.model package", "gsmmutils.omics package", "gsmmutils.stats package", "gsmmutils.utils package", "Welcome to gsmmutils\u2019s documentation!", "gsmmutils", "gsmmutils"], "terms": {"class": [1, 2, 3, 4, 5, 8, 10, 11], "functionalannot": 1, "blast_directori": 1, "base": [1, 2, 3, 4, 5, 8, 10, 11], "genomeannot": 1, "method": [1, 2, 3, 4, 5, 8, 10, 11], "identify_gene_by_homologi": 1, "str": [1, 2, 5, 6, 8, 9, 10, 11], "query_path": 1, "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "results_path": 1, "thi": [1, 5, 8, 9], "function": [1, 3, 8, 9, 10, 11], "identifi": 1, "gene": [1, 8], "homologi": 1, "us": [1, 2, 8, 9], "blastp": 1, "paramet": [1, 2, 4, 5, 6, 8, 9, 10, 11], "The": [1, 8, 9], "search": [1, 2, 8, 12], "path": [1, 2, 6, 9], "queri": 1, "file": [1, 8, 9], "result": [1, 2, 7, 8, 9], "identify_gene_by_homology_from_ec": 1, "ec_numb": [1, 2], "ec": [1, 2], "number": [1, 2, 9], "enzym": 1, "object": [1, 2, 3, 4, 5, 8, 9, 10, 11], "structuralannot": 1, "alignment_evalu": 1, "filepath": 1, "k": 1, "int": [1, 9, 11], "1": [1, 8, 9, 11], "evalu": [1, 9], "align": 1, "calcul": [1, 5, 8, 11], "ratio": 1, "total": [1, 11], "genom": 1, "gene_prediction_evalu": 1, "predict": 1, "create_related_pathways_map": 2, "universal_model": 2, "folder_path": 2, "creat": [2, 8], "map": 2, "relat": 2, "pathwai": [2, 3], "each": [2, 9], "univers": [2, 14], "model": [2, 3, 4, 5, 6, 9, 10, 11], "mymodel": [2, 8, 9], "folder": 2, "where": 2, "save": [2, 5, 8, 9], "return": [2, 3, 5, 8, 9, 10, 11], "re": 2, "dictionari": [2, 3, 5, 8, 9], "type": [2, 8, 9, 10], "dict": [2, 6, 8, 9, 11], "get_kegg_pathwai": 2, "pathway_id": 2, "get": [2, 3, 5, 8], "from": [2, 5, 8, 9], "id": [2, 3, 5, 8], "get_related_pathwai": 2, "pathway_nam": 2, "related_pathways_map": 2, "name": [2, 3, 4, 8, 9], "list": [2, 9, 10], "search_pathway_map_id": 2, "get_batch": 2, "download_swiss_prot": 2, "download": 2, "swissprot": 2, "databas": 2, "batch_url": 2, "rtype": [2, 8], "search_by_ec_numb": 2, "review": 2, "bool": [2, 8, 10], "true": [2, 6, 8, 10], "protein": [2, 8], "If": [2, 8], "onli": 2, "ar": [2, 8], "A": [2, 8, 9], "match": [2, 8], "search_by_ec_number_onlin": 2, "rest": 2, "get_next_link": 2, "header": [2, 5], "gene_id": 3, "chromosom": 3, "start": [3, 11], "end": [3, 11], "strand": 3, "length": 3, "descript": 3, "attribut": [3, 4, 5, 8], "annot": [3, 5, 8], "flag": 3, "indic": 3, "i": [3, 8, 9], "reaction": [3, 5, 8, 9, 11], "frozenset": [3, 5], "properti": [3, 4, 5, 8], "batch": 3, "genes_id": 3, "load": [3, 5, 8, 9], "set_pathwai": 3, "datafram": [3, 5, 6, 8, 9, 10, 11], "pathway_map": 3, "dfba": 4, "data_directori": [4, 11], "src_directori": [4, 11], "run": [4, 9, 11], "get_dynamic_express": 4, "get_exchange_flux": 4, "get_initial_condit": 4, "matrix": [4, 7], "condit": [4, 5, 8, 11], "caroten": 4, "chlorophyl": 4, "co2": 4, "get_bound": 4, "glycerol": 4, "internal_nitr": 4, "light": 4, "lutein": 4, "nitrat": 4, "phosphat": 4, "polyphosph": 4, "starch_consumpt": 4, "starch_product": 4, "tag": 4, "kinet": 4, "timestamp": 4, "assign_micmen_kinet": 4, "assin_caro_kinet": 4, "assing_light_kinet": 4, "plot_concentr": [4, 6], "set_param": 4, "update_kinet": 4, "kei": 4, "column": [4, 6, 8], "time_span": 4, "metabolites_to_follow": 4, "biomass": [4, 8, 11], "concentr": 4, "biomass_react": [5, 8, 11], "filenam": [5, 6, 7, 8], "standard_biomass": 5, "metabolit": [5, 8], "stoichiometri": [5, 8, 11], "parent": 5, "children": 5, "constraint": [5, 8], "associ": 5, "solver": [5, 8], "element": [5, 11], "dicitonari": 5, "count": 5, "formula_weight": 5, "formula": [5, 10, 11], "weight": 5, "shadow_pric": 5, "shadow": 5, "price": 5, "most": 5, "recent": 5, "solut": [5, 8], "y": [5, 6], "experimental_filenam": 5, "substrate_uptake_dai": 5, "substrate_uptake_hour": 5, "get_biomass": 5, "get_experimental_data": 5, "get_growth_r": [5, 11], "get_maximum_product": [5, 11], "get_substrate_uptak": 5, "get_substrate_uptake_for_tri": 5, "get_substrate_uptake_from_biomass": 5, "remove_tri": 5, "set_exponential_phas": 5, "substrat": [5, 8, 11], "trial_nam": 5, "data": [5, 6, 8, 9, 10, 11], "m_substrat": [5, 11], "m_element": [5, 11], "carbon_in_biomass": [5, 11], "trial": 5, "exponential_phas": [5, 11], "barplot": 6, "to_show": 6, "boxplot": 6, "x_col": 6, "y_col": 6, "x_label": 6, "y_label": 6, "clustermap": 6, "titl": [6, 10], "kwarg": [6, 7, 8, 11], "generate_plot_for_data": 6, "experimental_data": 6, "simulation_data": 6, "sd_data": 6, "gener": [6, 8, 9], "given": [6, 8], "experiment": 6, "simul": [6, 8], "standard": 6, "deviat": 6, "label": 6, "axi": 6, "heatmap": 6, "hist": 6, "dataset": [6, 9], "xlabel": 6, "ylabel": 6, "lineplot": 6, "x": [6, 11], "plot_trajectori": 6, "plot_two_axi": 6, "df": 6, "secondari": 6, "qqplot": 6, "surfac": 6, "z": 6, "read_csv": 7, "index_nam": 7, "read_excel": 7, "read_matrix": 7, "read_simul": 7, "write_matrix": 7, "write_simul": 7, "write_specific_model": 7, "specific_model": 7, "mon": 8, "jun": 8, "29": 8, "14": 8, "52": 8, "26": 8, "2020": [8, 14], "author": 8, "ecunha": 8, "file_nam": 8, "directori": 8, "prune_metabolit": 8, "fals": 8, "biomass_composit": 8, "boundari": 8, "compart": 8, "all": [8, 10], "cobra": [8, 9], "demand": 8, "exchang": 8, "medium": 8, "objective_direct": 8, "direct": 8, "problem": 8, "interfac": 8, "": [8, 9, 11], "underli": 8, "mathemat": 8, "sink": 8, "attach": 8, "instanc": 8, "toler": 8, "variabl": 8, "adjust_biomass": 8, "adjust_precursor": 8, "apply_env_conditions_from_dict": 8, "connect": 8, "create_exchang": 8, "create_metabolit": 8, "create_transport": 8, "delete_b_metabolit": 8, "determine_precursor": 8, "evaluate_precursor": 8, "gene_essenti": 8, "get_bio_react": 8, "get_exchang": 8, "get_genes_pathways_map": 8, "get_metabolit": 8, "get_pathway_reactions_map": 8, "get_product": [8, 11], "get_react": 8, "get_reactions_pathways_map": 8, "minimize_uptake_sum": 8, "parse_gen": 8, "parse_reactions_vers": 8, "reset": 8, "revert_react": 8, "sampl": [8, 9], "search_biomass": 8, "set_compart": 8, "set_heterotrophi": 8, "set_mixotrophi": 8, "set_photoautotrophi": 8, "set_prism_react": 8, "set_stoichiometri": 8, "setup_condit": 8, "topological_analysi": 8, "undo": 8, "add_medium": 8, "medium_file_nam": 8, "medium_sheet_nam": 8, "add": 8, "an": [8, 9], "excel": 8, "sheet": 8, "new_valu": [8, 11], "suffix": 8, "v2": 8, "biomass_reaction_id": 8, "reaction_id": 8, "composit": 8, "alias": 8, "apply_env_conditions_from_excel": 8, "conditions_file_nam": 8, "conditions_sheet_nam": 8, "appli": 8, "environment": 8, "output_file_nam": 8, "extracellular_compart": 8, "cytosol_compart": 8, "periplasm": 8, "copi": 8, "provid": 8, "partial": 8, "deepcopi": 8, "anew": 8, "faster": 8, "fashion": 8, "than": 8, "new": 8, "create_demand": 8, "metabolite_id": 8, "bound": 8, "10000": 8, "create_exchange_transport": 8, "ex_metabolit": 8, "in_metabolit": 8, "uptak": 8, "transport": 8, "secret": 8, "tupl": [8, 10], "create_flux": 8, "flux": [8, 11], "panda": [8, 9], "create_fluxes_spreadsheet": 8, "reactions_file_nam": 8, "spreadsheet_nam": 8, "version": 8, "spreadsheet": 8, "inform": 8, "is_boundary_metabolit": 8, "create_react": 8, "union": 8, "create_reporting_fil": 8, "test": [8, 10], "create_sink": 8, "create_test_drains_to_react": 8, "reactant": 8, "product": 8, "drain": 8, "create_trnas_react": 8, "protein_id": 8, "e": [8, 11], "trna": 8, "synthesi": 8, "unit": 8, "current_precursor": 8, "get_bio_precursor": 8, "precursor": 8, "get_metabolite_by_nam": 8, "c00002": 8, "its": 8, "get_pre_precursor": 8, "produc": 8, "infer_biomass_from_model": 8, "biomass_reaction_nam": 8, "e_biomass__cytop": 8, "biomass_met_id": 8, "infer": 8, "param": [8, 9, 11], "load_model": 8, "cobraapi": 8, "It": 8, "also": 8, "first": 8, "maxim": 8, "valu": [8, 9], "pfba": 8, "can": 8, "whole": 8, "merge_flux": 8, "merg": 8, "minimal_medium": 8, "minimal_growth": 8, "minim": 8, "growth": 8, "rate": 8, "float": [8, 9, 11], "to_minim": 8, "to_maxim": 8, "achr": 8, "carbon_sourc": 8, "ex_c00033__dra": 8, "update_valu": 8, "10": 8, "photon_uptak": 8, "855": 8, "previous_carbon_sourc": 8, "summari": 8, "option": 8, "previou": 8, "parsimoni": 8, "distribut": 8, "default": 8, "fva": 8, "pd": [8, 9], "whether": 8, "includ": 8, "analysi": 8, "output": 8, "should": 8, "either": 8, "between": [8, 11], "0": [8, 9, 11], "repres": 8, "fraction": 8, "optimum": 8, "modelsummari": 8, "test_bio_precursor": 8, "ani": 8, "equat": 8, "test_e_precursor": 8, "test_e_react": 8, "e_metabolit": 8, "known": 8, "which": 8, "test_react": 8, "update_fluxes_spreadsheet": 8, "sheet_nam": 8, "column_to_writ": 8, "updat": 8, "write": [8, 9], "sbml": [8, 9], "format": 8, "add_reaction_string_to_datafram": 8, "aerob": 8, "lr": [8, 11], "aerobic_v2": 8, "anaerob": 8, "atp_m": 8, "m_reaction": 8, "mu": 8, "check_bal": 8, "show_biomass_react": 8, "check_biomass": 8, "check_transport": 8, "check_under_limit": 8, "compare_react": 8, "model1": 8, "model2": 8, "count_reactions_by_compart": 8, "define_medium": 8, "m": 8, "bigg": 8, "define_medium_quercu": 8, "get_metabolite_compart": 8, "get_reactions_nadh_nadph": 8, "get_transport_numb": 8, "photorespiration_v1": 8, "q": 8, "3": 8, "photorespiration_v2": 8, "photosynthesi": 8, "react_without_gen": 8, "simulation_for_condit": 8, "conditions_df": 8, "growth_rate_df": 8, "save_in_fil": 8, "update_biomass": 8, "metabolites_to_remov": 8, "NOT": 8, "finish": 8, "modelvalid": 8, "atpm_react": 8, "cytoplasm_abb": 8, "__cytop": 8, "check_biomass_product": 8, "check_blocked_react": 8, "check_energy_producing_cycl": 8, "check_reactions_equal_metabolit": 8, "check_sbc": 8, "check_unbounded_flux": 8, "valid": 8, "global_threshold": 9, "sample_seri": 9, "gtu": 9, "maxexp": 9, "local1_threshold": 9, "lt": 9, "local2_threshold": 9, "gtl": 9, "threshold_strategi": 9, "thresholding_strategi": 9, "threshold": [9, 11], "strategi": 9, "process": [9, 11], "singl": 9, "time": [9, 11], "specif": 9, "global": 9, "upper": 9, "lower": 9, "local": 9, "maximum": 9, "express": 9, "filtered_sampl": 9, "filter": 9, "thresholding_filt": 9, "omics_datafram": 9, "global_threshold_upp": 9, "global_threshold_low": 9, "local_threshold": 9, "accept": 9, "local1": 9, "local2": 9, "posit": 9, "quantil": 9, "2": 9, "filtered_dataset": 9, "blockprint": 9, "enableprint": 9, "read_task_fil": 9, "generic_model": 9, "read": 9, "task": 9, "task_ev": 9, "model_templ": 9, "integration_result": 9, "perform": [9, 10], "context": 9, "were": 9, "integr": 9, "write_result_jason": 9, "model_nam": 9, "task_evaluation_result": 9, "json": 9, "wa": 9, "integration_pipelin": 9, "dataset_nam": 9, "algorithm": 9, "thread_numb": 9, "output_dir": 9, "pipelin": 9, "export": 9, "thread": 9, "print_model_detail": 9, "cobra_model": 9, "print": [9, 10], "detail": 9, "current": 9, "reconstruct_context_specific_model": 9, "integration_result_dict": 9, "obtain": 9, "templat": 9, "contain": 9, "boolean": 9, "reconstruction_funct": 9, "omics_contain": 9, "reconstruct": 9, "set": 9, "rec_wrapp": 9, "wrapper": 9, "template_model": 9, "omics_dataset": 9, "troppo_res_path": 9, "troppo_omics_integr": 9, "thresholds_map": 9, "statisticalanalysi": 10, "get_correl": 10, "anova": 10, "to_print": 10, "tabl": 10, "anova_t": 10, "ol": 10, "col": 10, "pearson": 10, "manova": 10, "print_tabl": 10, "dockercli": 11, "examples_directori": 11, "config_directori": 11, "utilities_directori": 11, "server": 11, "ture": 11, "login": 11, "docker_nam": 11, "docker_cmd": 11, "block_print": 11, "car_gen": 11, "n": 11, "convert_mg_gdw_to_mmol_gdw": 11, "mg": 11, "mw": 11, "convert_mg_gmm_to_mmol_gmm": 11, "mg_gmm": 11, "convert_mg_molmm_to_mmolm_gmm": 11, "mmol_molmm": 11, "convert_mmol_mol_to_g_molmm": 11, "mmol": 11, "differential_reaction_capac": 11, "rc_1": 11, "rc_2": 11, "enable_print": 11, "flux_chang": 11, "fluxes_control": 11, "fluxes_condit": 11, "chang": 11, "two": 11, "get_average_uptak": 11, "get_biomass_mass": 11, "lipid_subreact": 11, "get_caro_kinet": 11, "get_data_at_phas": 11, "get_element_in_biomass": 11, "get_fix": 11, "get_growth_rate_from_slop": 11, "get_light_kinet": 11, "eo": 11, "ke": 11, "get_login_info": 11, "get_micmen_kinet": 11, "get_molecular_weight": 11, "get_parameter_rang": 11, "number_of_step": 11, "get_precursor": 11, "macromolecul": 11, "temp_precursor": 11, "48": 11, "get_uptak": 11, "mp": 11, "callabl": 11, "iter": 11, "nitrogen_quota": 11, "normal": 11, "mg_gdw": 11, "phi": 11, "reaction_capac": 11, "fva_solut": 11, "capac": 11, "cmd": 11, "update_st": 11, "instal": 12, "credit": 12, "licens": 12, "index": 12, "modul": 12, "page": 12, "For": 14, "api": 14, "pleas": 14, "check": 14, "pip": 14, "develop": 14, "centr": 14, "biolog": 14, "engin": 14, "minho": 14}, "objects": {"": [[0, 0, 0, "-", "gsmmutils"]], "gsmmutils": [[1, 0, 0, "-", "annotation"], [2, 0, 0, "-", "api"], [3, 0, 0, "-", "bio"], [4, 0, 0, "-", "dynamic"], [5, 0, 0, "-", "experimental"], [6, 0, 0, "-", "graphics"], [7, 0, 0, "-", "io"], [8, 0, 0, "-", "model"], [9, 0, 0, "-", "omics"], [10, 0, 0, "-", "stats"], [11, 0, 0, "-", "utils"]], "gsmmutils.annotation": [[1, 0, 0, "-", "genome_annotation"]], "gsmmutils.annotation.genome_annotation": [[1, 1, 1, "", "FunctionalAnnotation"], [1, 1, 1, "", "GenomeAnnotation"], [1, 1, 1, "", "StructuralAnnotation"]], "gsmmutils.annotation.genome_annotation.FunctionalAnnotation": [[1, 2, 1, "", "identify_gene_by_homology"], [1, 2, 1, "", "identify_gene_by_homology_from_ec"]], "gsmmutils.annotation.genome_annotation.StructuralAnnotation": [[1, 2, 1, "", "alignment_evaluation"], [1, 2, 1, "", "gene_prediction_evaluation"]], "gsmmutils.api": [[2, 0, 0, "-", "kegg"], [2, 0, 0, "-", "uniprot"]], "gsmmutils.api.kegg": [[2, 3, 1, "", "create_related_pathways_map"], [2, 3, 1, "", "get_kegg_pathways"], [2, 3, 1, "", "get_related_pathways"], [2, 3, 1, "", "search_pathway_map_id"]], "gsmmutils.api.uniprot": [[2, 1, 1, "", "Uniprot"], [2, 3, 1, "", "get_next_link"]], "gsmmutils.api.uniprot.Uniprot": [[2, 2, 1, "", "download_swiss_prot"], [2, 2, 1, "", "get_batch"], [2, 2, 1, "", "search"], [2, 2, 1, "", "search_by_ec_number"], [2, 2, 1, "", "search_by_ec_number_online"]], "gsmmutils.bio": [[3, 0, 0, "-", "gene"], [3, 0, 0, "-", "genes"]], "gsmmutils.bio.gene": [[3, 1, 1, "", "Gene"]], "gsmmutils.bio.gene.Gene": [[3, 4, 1, "", "pathways"]], "gsmmutils.bio.genes": [[3, 1, 1, "", "Genes"]], "gsmmutils.bio.genes.Genes": [[3, 4, 1, "", "genes"], [3, 4, 1, "", "genes_ids"], [3, 4, 1, "", "lengths"], [3, 2, 1, "", "load"], [3, 2, 1, "", "set_pathways"]], "gsmmutils.dynamic": [[4, 0, 0, "-", "dfba_docker"], [4, 0, 0, "-", "drhs"], [4, 0, 0, "-", "exchange_fluxes"], [4, 0, 0, "-", "initial_conditions"], [4, 0, 0, "-", "rhs"], [4, 0, 0, "-", "soa"]], "gsmmutils.dynamic.dfba_docker": [[4, 1, 1, "", "DFBA"]], "gsmmutils.dynamic.dfba_docker.DFBA": [[4, 2, 1, "", "run"]], "gsmmutils.dynamic.drhs": [[4, 3, 1, "", "get_dynamic_expressions"]], "gsmmutils.dynamic.exchange_fluxes": [[4, 3, 1, "", "get_exchange_fluxes"]], "gsmmutils.dynamic.initial_conditions": [[4, 3, 1, "", "get_initial_conditions"]], "gsmmutils.dynamic.rhs": [[4, 3, 1, "", "carotene"], [4, 3, 1, "", "chlorophyll"], [4, 3, 1, "", "co2"], [4, 3, 1, "", "get_bounds"], [4, 3, 1, "", "glycerol"], [4, 3, 1, "", "internal_nitrate"], [4, 3, 1, "", "light"], [4, 3, 1, "", "lutein"], [4, 3, 1, "", "nitrate"], [4, 3, 1, "", "phosphate"], [4, 3, 1, "", "polyphosphate"], [4, 3, 1, "", "starch_consumption"], [4, 3, 1, "", "starch_production"], [4, 3, 1, "", "tag"]], "gsmmutils.dynamic.soa": [[4, 1, 1, "", "soa"]], "gsmmutils.dynamic.soa.soa": [[4, 2, 1, "", "assign_micmen_kinetics"], [4, 2, 1, "", "assin_caro_kinetics"], [4, 2, 1, "", "assing_light_kinetics"], [4, 4, 1, "", "kinetics"], [4, 2, 1, "", "plot_concentrations"], [4, 2, 1, "", "run"], [4, 2, 1, "", "set_params"], [4, 4, 1, "", "timestamps"], [4, 2, 1, "", "update_kinetics"]], "gsmmutils.experimental": [[5, 0, 0, "-", "Biomass"], [5, 0, 0, "-", "BiomassComponent"], [5, 0, 0, "-", "ExpMatrix"]], "gsmmutils.experimental.Biomass": [[5, 1, 1, "", "Biomass"]], "gsmmutils.experimental.Biomass.Biomass": [[5, 2, 1, "", "load"], [5, 4, 1, "", "standard_biomass"]], "gsmmutils.experimental.BiomassComponent": [[5, 1, 1, "", "BiomassComponent"]], "gsmmutils.experimental.BiomassComponent.BiomassComponent": [[5, 4, 1, "", "children"], [5, 4, 1, "", "parent"], [5, 4, 1, "", "stoichiometry"]], "gsmmutils.experimental.ExpMatrix": [[5, 1, 1, "", "ExpMatrix"]], "gsmmutils.experimental.ExpMatrix.ExpMatrix": [[5, 4, 1, "", "conditions"], [5, 2, 1, "", "get_biomass"], [5, 2, 1, "", "get_experimental_data"], [5, 2, 1, "", "get_growth_rate"], [5, 2, 1, "", "get_maximum_productivity"], [5, 2, 1, "", "get_substrate_uptake"], [5, 2, 1, "", "get_substrate_uptake_for_trial"], [5, 2, 1, "", "get_substrate_uptake_from_biomass"], [5, 2, 1, "", "load"], [5, 2, 1, "", "remove_trials"], [5, 2, 1, "", "save"], [5, 2, 1, "", "set_exponential_phases"], [5, 4, 1, "", "substrate_uptake_days"], [5, 4, 1, "", "substrate_uptake_hours"]], "gsmmutils.graphics": [[6, 0, 0, "-", "plot"]], "gsmmutils.graphics.plot": [[6, 3, 1, "", "barplot"], [6, 3, 1, "", "boxplot"], [6, 3, 1, "", "clustermap"], [6, 3, 1, "", "generate_plot_for_data"], [6, 3, 1, "", "heatmap"], [6, 3, 1, "", "hist"], [6, 3, 1, "", "lineplot"], [6, 3, 1, "", "plot_concentrations"], [6, 3, 1, "", "plot_trajectories"], [6, 3, 1, "", "plot_two_axis"], [6, 3, 1, "", "qqplot"], [6, 3, 1, "", "surface"]], "gsmmutils.io": [[7, 0, 0, "-", "reader"], [7, 0, 0, "-", "writer"]], "gsmmutils.io.reader": [[7, 3, 1, "", "read_csv"], [7, 3, 1, "", "read_excel"], [7, 3, 1, "", "read_matrix"], [7, 3, 1, "", "read_simulation"]], "gsmmutils.io.writer": [[7, 3, 1, "", "write_matrix"], [7, 3, 1, "", "write_simulation"], [7, 3, 1, "", "write_specific_models"]], "gsmmutils.model": [[8, 0, 0, "-", "COBRAmodel"], [8, 0, 0, "-", "model_validator"]], "gsmmutils.model.COBRAmodel": [[8, 1, 1, "", "MyModel"], [8, 3, 1, "", "add_reaction_string_to_dataframe"], [8, 3, 1, "", "aerobic"], [8, 3, 1, "", "aerobic_v2"], [8, 3, 1, "", "anaerobic"], [8, 3, 1, "", "atp_m"], [8, 3, 1, "", "check_balance"], [8, 3, 1, "", "check_biomass"], [8, 3, 1, "", "check_transport"], [8, 3, 1, "", "check_under_limit"], [8, 3, 1, "", "compare_reacts"], [8, 3, 1, "", "count_reactions_by_compartment"], [8, 3, 1, "", "define_medium"], [8, 3, 1, "", "define_medium_quercus"], [8, 3, 1, "", "get_metabolite_compartment"], [8, 3, 1, "", "get_reactions_nadh_nadph"], [8, 3, 1, "", "get_transport_number"], [8, 3, 1, "", "photorespiration_v1"], [8, 3, 1, "", "photorespiration_v2"], [8, 3, 1, "", "photosynthesis"], [8, 3, 1, "", "react_without_gene"], [8, 3, 1, "", "simulation_for_conditions"], [8, 3, 1, "", "update_biomass"]], "gsmmutils.model.COBRAmodel.MyModel": [[8, 2, 1, "", "add_medium"], [8, 2, 1, "", "adjust_biomass"], [8, 2, 1, "", "adjust_precursors"], [8, 2, 1, "", "apply_env_conditions_from_dict"], [8, 2, 1, "", "apply_env_conditions_from_excel"], [8, 4, 1, "", "biomass_composition"], [8, 2, 1, "", "connectivity"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "create_demand"], [8, 2, 1, "", "create_exchange"], [8, 2, 1, "", "create_exchange_transport"], [8, 2, 1, "", "create_fluxes"], [8, 2, 1, "", "create_fluxes_spreadsheet"], [8, 2, 1, "", "create_metabolite"], [8, 2, 1, "", "create_reaction"], [8, 2, 1, "", "create_reporting_file"], [8, 2, 1, "", "create_sink"], [8, 2, 1, "", "create_test_drains_to_reaction"], [8, 2, 1, "", "create_transport"], [8, 2, 1, "", "create_trnas_reactions"], [8, 2, 1, "", "delete_b_metabolites"], [8, 2, 1, "", "determine_precursors"], [8, 2, 1, "", "evaluate_precursor"], [8, 2, 1, "", "gene_essentially"], [8, 2, 1, "", "get_bio_precursors"], [8, 2, 1, "", "get_bio_reaction"], [8, 2, 1, "", "get_exchanges"], [8, 2, 1, "", "get_genes_pathways_map"], [8, 2, 1, "", "get_metabolite"], [8, 2, 1, "", "get_metabolite_by_name"], [8, 2, 1, "", "get_pathway_reactions_map"], [8, 2, 1, "", "get_pre_precursors"], [8, 2, 1, "", "get_products"], [8, 2, 1, "", "get_reactants"], [8, 2, 1, "", "get_reaction"], [8, 2, 1, "", "get_reactions_pathways_map"], [8, 2, 1, "", "infer_biomass_from_model"], [8, 2, 1, "", "load_model"], [8, 2, 1, "", "maximize"], [8, 2, 1, "", "merge_fluxes"], [8, 2, 1, "", "minimal_medium"], [8, 2, 1, "", "minimize_uptake_sum"], [8, 2, 1, "", "parse_genes"], [8, 2, 1, "", "parse_reactions_versions"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "revert_reaction"], [8, 2, 1, "", "sample"], [8, 2, 1, "", "save"], [8, 2, 1, "", "search_biomass"], [8, 2, 1, "", "set_compartments"], [8, 2, 1, "", "set_heterotrophy"], [8, 2, 1, "", "set_mixotrophy"], [8, 2, 1, "", "set_photoautotrophy"], [8, 2, 1, "", "set_prism_reaction"], [8, 2, 1, "", "set_stoichiometry"], [8, 2, 1, "", "setup_condition"], [8, 2, 1, "", "summary"], [8, 2, 1, "", "test_bio_precursors"], [8, 2, 1, "", "test_e_precursors"], [8, 2, 1, "", "test_e_reaction"], [8, 2, 1, "", "test_reaction"], [8, 2, 1, "", "topological_analysis"], [8, 2, 1, "", "undo"], [8, 2, 1, "", "update_fluxes_spreadsheet"], [8, 2, 1, "", "write"]], "gsmmutils.model.model_validator": [[8, 1, 1, "", "ModelValidator"]], "gsmmutils.model.model_validator.ModelValidator": [[8, 2, 1, "", "check_balance"], [8, 2, 1, "", "check_biomass_production"], [8, 2, 1, "", "check_blocked_reactions"], [8, 2, 1, "", "check_energy_producing_cycles"], [8, 2, 1, "", "check_reactions_equal_metabolites"], [8, 2, 1, "", "check_sbc"], [8, 2, 1, "", "check_unbounded_flux"], [8, 2, 1, "", "validate"]], "gsmmutils.omics": [[9, 0, 0, "-", "omics_processing"], [9, 0, 0, "-", "task_evaluation"], [9, 0, 0, "-", "troppo"], [9, 0, 0, "-", "troppo_integration"]], "gsmmutils.omics.omics_processing": [[9, 3, 1, "", "global_thresholding"], [9, 3, 1, "", "local1_thresholding"], [9, 3, 1, "", "local2_thresholding"], [9, 3, 1, "", "threshold_strategy"], [9, 3, 1, "", "thresholding_filter"]], "gsmmutils.omics.task_evaluation": [[9, 3, 1, "", "blockPrint"], [9, 3, 1, "", "enablePrint"], [9, 3, 1, "", "read_task_file"], [9, 3, 1, "", "task_eval"], [9, 3, 1, "", "write_result_jason"]], "gsmmutils.omics.troppo": [[9, 3, 1, "", "integration_pipeline"], [9, 3, 1, "", "print_model_details"], [9, 3, 1, "", "reconstruct_context_specific_models"], [9, 3, 1, "", "reconstruction_function"], [9, 3, 1, "", "troppo_integration"]], "gsmmutils.omics.troppo_integration": [[9, 3, 1, "", "reconstruction_function"], [9, 3, 1, "", "troppo_omics_integration"]], "gsmmutils.stats": [[10, 0, 0, "-", "stats"]], "gsmmutils.stats.stats": [[10, 1, 1, "", "StatisticalAnalysis"], [10, 3, 1, "", "print_table"]], "gsmmutils.stats.stats.StatisticalAnalysis": [[10, 2, 1, "", "anova"], [10, 2, 1, "", "get_correlation"], [10, 2, 1, "", "manova"]], "gsmmutils.utils": [[11, 0, 0, "-", "remote"], [11, 0, 0, "-", "utils"]], "gsmmutils.utils.remote": [[11, 1, 1, "", "DockerClient"], [11, 1, 1, "", "Remote"]], "gsmmutils.utils.remote.Remote": [[11, 2, 1, "", "login"], [11, 2, 1, "", "run"]], "gsmmutils.utils.utils": [[11, 3, 1, "", "block_print"], [11, 3, 1, "", "car_gen"], [11, 3, 1, "", "convert_mg_gDW_to_mmol_gDW"], [11, 3, 1, "", "convert_mg_gMM_to_mmol_gMM"], [11, 3, 1, "", "convert_mg_molMM_to_mmolM_gMM"], [11, 3, 1, "", "convert_mmol_mol_to_g_molMM"], [11, 3, 1, "", "differential_reaction_capacity"], [11, 3, 1, "", "enable_print"], [11, 3, 1, "", "flux_change"], [11, 3, 1, "", "get_average_uptake"], [11, 3, 1, "", "get_biomass_mass"], [11, 3, 1, "", "get_caro_kinetics"], [11, 3, 1, "", "get_data_at_phase"], [11, 3, 1, "", "get_element_in_biomass"], [11, 3, 1, "", "get_fixation"], [11, 3, 1, "", "get_growth_rate"], [11, 3, 1, "", "get_growth_rate_from_slope"], [11, 3, 1, "", "get_light_kinetics"], [11, 3, 1, "", "get_login_info"], [11, 3, 1, "", "get_maximum_productivity"], [11, 3, 1, "", "get_micmen_kinetics"], [11, 3, 1, "", "get_molecular_weight"], [11, 3, 1, "", "get_parameter_range"], [11, 3, 1, "", "get_precursors"], [11, 3, 1, "", "get_productivity"], [11, 3, 1, "", "get_uptake"], [11, 3, 1, "", "mp"], [11, 3, 1, "", "nitrogen_quota"], [11, 3, 1, "", "normalize"], [11, 3, 1, "", "phi"], [11, 3, 1, "", "reaction_capacity"], [11, 3, 1, "", "run"], [11, 3, 1, "", "update_st"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"gsmmutil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "annot": 1, "submodul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "genome_annot": 1, "api": 2, "kegg": 2, "uniprot": 2, "bio": 3, "gene": 3, "dynam": 4, "dae": 4, "dfba_dock": 4, "drh": 4, "exchange_flux": 4, "initial_condit": 4, "rh": 4, "run_dfba": 4, "soa": 4, "experiment": 5, "biomass": 5, "biomasscompon": 5, "expmatrix": 5, "graphic": 6, "plot": 6, "io": 7, "reader": 7, "writer": 7, "model": 8, "cobramodel": 8, "fame2biomass": 8, "model_valid": 8, "omic": 9, "model_handl": 9, "omics_integr": 9, "omics_process": 9, "task_evalu": 9, "troppo": 9, "troppo_integr": 9, "troppo_reconstruction_pipelin": 9, "stat": 10, "util": 11, "config_vari": 11, "medium_vari": 11, "pipeline_path": 11, "remot": 11, "welcom": 12, "": 12, "document": [12, 14], "indic": 12, "tabl": 12, "instal": 14, "credit": 14, "licens": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"gsmmutils package": [[0, "gsmmutils-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-gsmmutils"], [1, "module-gsmmutils.annotation"], [2, "module-gsmmutils.api"], [3, "module-gsmmutils.bio"], [4, "module-gsmmutils.dynamic"], [5, "module-gsmmutils.experimental"], [6, "module-gsmmutils.graphics"], [7, "module-gsmmutils.io"], [8, "module-gsmmutils.model"], [9, "module-gsmmutils.omics"], [10, "module-gsmmutils.stats"], [11, "module-gsmmutils.utils"]], "gsmmutils.annotation package": [[1, "gsmmutils-annotation-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "gsmmutils.annotation.genome_annotation module": [[1, "module-gsmmutils.annotation.genome_annotation"]], "gsmmutils.api package": [[2, "gsmmutils-api-package"]], "gsmmutils.api.kegg module": [[2, "module-gsmmutils.api.kegg"]], "gsmmutils.api.uniprot module": [[2, "module-gsmmutils.api.uniprot"]], "gsmmutils.bio package": [[3, "gsmmutils-bio-package"]], "gsmmutils.bio.gene module": [[3, "module-gsmmutils.bio.gene"]], "gsmmutils.bio.genes module": [[3, "module-gsmmutils.bio.genes"]], "gsmmutils.dynamic package": [[4, "gsmmutils-dynamic-package"]], "gsmmutils.dynamic.DAE module": [[4, "gsmmutils-dynamic-dae-module"]], "gsmmutils.dynamic.dfba_docker module": [[4, "module-gsmmutils.dynamic.dfba_docker"]], "gsmmutils.dynamic.drhs module": [[4, "module-gsmmutils.dynamic.drhs"]], "gsmmutils.dynamic.exchange_fluxes module": [[4, "module-gsmmutils.dynamic.exchange_fluxes"]], "gsmmutils.dynamic.initial_conditions module": [[4, "module-gsmmutils.dynamic.initial_conditions"]], "gsmmutils.dynamic.rhs module": [[4, "module-gsmmutils.dynamic.rhs"]], "gsmmutils.dynamic.run_dfba module": [[4, "gsmmutils-dynamic-run-dfba-module"]], "gsmmutils.dynamic.soa module": [[4, "module-gsmmutils.dynamic.soa"]], "gsmmutils.experimental package": [[5, "gsmmutils-experimental-package"]], "gsmmutils.experimental.Biomass module": [[5, "module-gsmmutils.experimental.Biomass"]], "gsmmutils.experimental.BiomassComponent module": [[5, "module-gsmmutils.experimental.BiomassComponent"]], "gsmmutils.experimental.ExpMatrix module": [[5, "module-gsmmutils.experimental.ExpMatrix"]], "gsmmutils.graphics package": [[6, "gsmmutils-graphics-package"]], "gsmmutils.graphics.plot module": [[6, "module-gsmmutils.graphics.plot"]], "gsmmutils.io package": [[7, "gsmmutils-io-package"]], "gsmmutils.io.reader module": [[7, "module-gsmmutils.io.reader"]], "gsmmutils.io.writer module": [[7, "module-gsmmutils.io.writer"]], "gsmmutils.model package": [[8, "gsmmutils-model-package"]], "gsmmutils.model.COBRAmodel module": [[8, "module-gsmmutils.model.COBRAmodel"]], "gsmmutils.model.FAME2Biomass module": [[8, "gsmmutils-model-fame2biomass-module"]], "gsmmutils.model.model_validator module": [[8, "module-gsmmutils.model.model_validator"]], "gsmmutils.omics package": [[9, "gsmmutils-omics-package"]], "gsmmutils.omics.model_handle module": [[9, "gsmmutils-omics-model-handle-module"]], "gsmmutils.omics.omics_integration module": [[9, "gsmmutils-omics-omics-integration-module"]], "gsmmutils.omics.omics_processing module": [[9, "module-gsmmutils.omics.omics_processing"]], "gsmmutils.omics.task_evaluation module": [[9, "module-gsmmutils.omics.task_evaluation"]], "gsmmutils.omics.troppo module": [[9, "module-gsmmutils.omics.troppo"]], "gsmmutils.omics.troppo_integration module": [[9, "module-gsmmutils.omics.troppo_integration"]], "gsmmutils.omics.troppo_reconstruction_pipeline module": [[9, "gsmmutils-omics-troppo-reconstruction-pipeline-module"]], "gsmmutils.stats package": [[10, "gsmmutils-stats-package"]], "gsmmutils.stats.stats module": [[10, "module-gsmmutils.stats.stats"]], "gsmmutils.utils package": [[11, "gsmmutils-utils-package"]], "gsmmutils.utils.config_variables module": [[11, "gsmmutils-utils-config-variables-module"]], "gsmmutils.utils.medium_variables module": [[11, "gsmmutils-utils-medium-variables-module"]], "gsmmutils.utils.pipeline_paths module": [[11, "gsmmutils-utils-pipeline-paths-module"]], "gsmmutils.utils.remote module": [[11, "module-gsmmutils.utils.remote"]], "gsmmutils.utils.utils module": [[11, "module-gsmmutils.utils.utils"]], "Welcome to gsmmutils\u2019s documentation!": [[12, "welcome-to-gsmmutils-s-documentation"]], "Contents:": [[12, null]], "Indices and tables": [[12, "indices-and-tables"]], "gsmmutils": [[13, "gsmmutils"], [14, "gsmmutils"]], "Documentation": [[14, "documentation"]], "Installation": [[14, "installation"]], "Credits and License": [[14, "credits-and-license"]]}, "indexentries": {"gsmmutils": [[0, "module-gsmmutils"]], "module": [[0, "module-gsmmutils"], [1, "module-gsmmutils.annotation"], [1, "module-gsmmutils.annotation.genome_annotation"], [2, "module-gsmmutils.api"], [2, "module-gsmmutils.api.kegg"], [2, "module-gsmmutils.api.uniprot"], [3, "module-gsmmutils.bio"], [3, "module-gsmmutils.bio.gene"], [3, "module-gsmmutils.bio.genes"], [4, "module-gsmmutils.dynamic"], [4, "module-gsmmutils.dynamic.dfba_docker"], [4, "module-gsmmutils.dynamic.drhs"], [4, "module-gsmmutils.dynamic.exchange_fluxes"], [4, "module-gsmmutils.dynamic.initial_conditions"], [4, "module-gsmmutils.dynamic.rhs"], [4, "module-gsmmutils.dynamic.soa"], [5, "module-gsmmutils.experimental"], [5, "module-gsmmutils.experimental.Biomass"], [5, "module-gsmmutils.experimental.BiomassComponent"], [5, "module-gsmmutils.experimental.ExpMatrix"], [6, "module-gsmmutils.graphics"], [6, "module-gsmmutils.graphics.plot"], [7, "module-gsmmutils.io"], [7, "module-gsmmutils.io.reader"], [7, "module-gsmmutils.io.writer"], [8, "module-gsmmutils.model"], [8, "module-gsmmutils.model.COBRAmodel"], [8, "module-gsmmutils.model.model_validator"], [9, "module-gsmmutils.omics"], [9, "module-gsmmutils.omics.omics_processing"], [9, "module-gsmmutils.omics.task_evaluation"], [9, "module-gsmmutils.omics.troppo"], [9, "module-gsmmutils.omics.troppo_integration"], [10, "module-gsmmutils.stats"], [10, "module-gsmmutils.stats.stats"], [11, "module-gsmmutils.utils"], [11, "module-gsmmutils.utils.remote"], [11, "module-gsmmutils.utils.utils"]], "functionalannotation (class in gsmmutils.annotation.genome_annotation)": [[1, "gsmmutils.annotation.genome_annotation.FunctionalAnnotation"]], "genomeannotation (class in gsmmutils.annotation.genome_annotation)": [[1, "gsmmutils.annotation.genome_annotation.GenomeAnnotation"]], "structuralannotation (class in gsmmutils.annotation.genome_annotation)": [[1, "gsmmutils.annotation.genome_annotation.StructuralAnnotation"]], "alignment_evaluation() (gsmmutils.annotation.genome_annotation.structuralannotation method)": [[1, "gsmmutils.annotation.genome_annotation.StructuralAnnotation.alignment_evaluation"]], "gene_prediction_evaluation() (gsmmutils.annotation.genome_annotation.structuralannotation method)": [[1, "gsmmutils.annotation.genome_annotation.StructuralAnnotation.gene_prediction_evaluation"]], "gsmmutils.annotation": [[1, "module-gsmmutils.annotation"]], "gsmmutils.annotation.genome_annotation": [[1, "module-gsmmutils.annotation.genome_annotation"]], "identify_gene_by_homology() (gsmmutils.annotation.genome_annotation.functionalannotation method)": [[1, "gsmmutils.annotation.genome_annotation.FunctionalAnnotation.identify_gene_by_homology"]], "identify_gene_by_homology_from_ec() (gsmmutils.annotation.genome_annotation.functionalannotation method)": [[1, "gsmmutils.annotation.genome_annotation.FunctionalAnnotation.identify_gene_by_homology_from_ec"]], "uniprot (class in gsmmutils.api.uniprot)": [[2, "gsmmutils.api.uniprot.Uniprot"]], "create_related_pathways_map() (in module gsmmutils.api.kegg)": [[2, "gsmmutils.api.kegg.create_related_pathways_map"]], "download_swiss_prot() (gsmmutils.api.uniprot.uniprot method)": [[2, "gsmmutils.api.uniprot.Uniprot.download_swiss_prot"]], "get_batch() (gsmmutils.api.uniprot.uniprot method)": [[2, "gsmmutils.api.uniprot.Uniprot.get_batch"]], "get_kegg_pathways() (in module gsmmutils.api.kegg)": [[2, "gsmmutils.api.kegg.get_kegg_pathways"]], "get_next_link() (in module gsmmutils.api.uniprot)": [[2, "gsmmutils.api.uniprot.get_next_link"]], "get_related_pathways() (in module gsmmutils.api.kegg)": [[2, "gsmmutils.api.kegg.get_related_pathways"]], "gsmmutils.api": [[2, "module-gsmmutils.api"]], "gsmmutils.api.kegg": [[2, "module-gsmmutils.api.kegg"]], "gsmmutils.api.uniprot": [[2, "module-gsmmutils.api.uniprot"]], "search() (gsmmutils.api.uniprot.uniprot method)": [[2, "gsmmutils.api.uniprot.Uniprot.search"]], "search_by_ec_number() (gsmmutils.api.uniprot.uniprot method)": [[2, "gsmmutils.api.uniprot.Uniprot.search_by_ec_number"]], "search_by_ec_number_online() (gsmmutils.api.uniprot.uniprot method)": [[2, "gsmmutils.api.uniprot.Uniprot.search_by_ec_number_online"]], "search_pathway_map_id() (in module gsmmutils.api.kegg)": [[2, "gsmmutils.api.kegg.search_pathway_map_id"]], "gene (class in gsmmutils.bio.gene)": [[3, "gsmmutils.bio.gene.Gene"]], "genes (class in gsmmutils.bio.genes)": [[3, "gsmmutils.bio.genes.Genes"]], "genes (gsmmutils.bio.genes.genes property)": [[3, "gsmmutils.bio.genes.Genes.genes"]], "genes_ids (gsmmutils.bio.genes.genes property)": [[3, "gsmmutils.bio.genes.Genes.genes_ids"]], "gsmmutils.bio": [[3, "module-gsmmutils.bio"]], "gsmmutils.bio.gene": [[3, "module-gsmmutils.bio.gene"]], "gsmmutils.bio.genes": [[3, "module-gsmmutils.bio.genes"]], "lengths (gsmmutils.bio.genes.genes property)": [[3, "gsmmutils.bio.genes.Genes.lengths"]], "load() (gsmmutils.bio.genes.genes method)": [[3, "gsmmutils.bio.genes.Genes.load"]], "pathways (gsmmutils.bio.gene.gene property)": [[3, "gsmmutils.bio.gene.Gene.pathways"]], "set_pathways() (gsmmutils.bio.genes.genes method)": [[3, "gsmmutils.bio.genes.Genes.set_pathways"]], "dfba (class in gsmmutils.dynamic.dfba_docker)": [[4, "gsmmutils.dynamic.dfba_docker.DFBA"]], "assign_micmen_kinetics() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.assign_micmen_kinetics"]], "assin_caro_kinetics() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.assin_caro_kinetics"]], "assing_light_kinetics() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.assing_light_kinetics"]], "carotene() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.carotene"]], "chlorophyll() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.chlorophyll"]], "co2() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.co2"]], "get_bounds() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.get_bounds"]], "get_dynamic_expressions() (in module gsmmutils.dynamic.drhs)": [[4, "gsmmutils.dynamic.drhs.get_dynamic_expressions"]], "get_exchange_fluxes() (in module gsmmutils.dynamic.exchange_fluxes)": [[4, "gsmmutils.dynamic.exchange_fluxes.get_exchange_fluxes"]], "get_initial_conditions() (in module gsmmutils.dynamic.initial_conditions)": [[4, "gsmmutils.dynamic.initial_conditions.get_initial_conditions"]], "glycerol() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.glycerol"]], "gsmmutils.dynamic": [[4, "module-gsmmutils.dynamic"]], "gsmmutils.dynamic.dfba_docker": [[4, "module-gsmmutils.dynamic.dfba_docker"]], "gsmmutils.dynamic.drhs": [[4, "module-gsmmutils.dynamic.drhs"]], "gsmmutils.dynamic.exchange_fluxes": [[4, "module-gsmmutils.dynamic.exchange_fluxes"]], "gsmmutils.dynamic.initial_conditions": [[4, "module-gsmmutils.dynamic.initial_conditions"]], "gsmmutils.dynamic.rhs": [[4, "module-gsmmutils.dynamic.rhs"]], "gsmmutils.dynamic.soa": [[4, "module-gsmmutils.dynamic.soa"]], "internal_nitrate() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.internal_nitrate"]], "kinetics (gsmmutils.dynamic.soa.soa property)": [[4, "gsmmutils.dynamic.soa.soa.kinetics"]], "light() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.light"]], "lutein() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.lutein"]], "nitrate() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.nitrate"]], "phosphate() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.phosphate"]], "plot_concentrations() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.plot_concentrations"]], "polyphosphate() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.polyphosphate"]], "run() (gsmmutils.dynamic.dfba_docker.dfba method)": [[4, "gsmmutils.dynamic.dfba_docker.DFBA.run"]], "run() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.run"]], "set_params() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.set_params"]], "soa (class in gsmmutils.dynamic.soa)": [[4, "gsmmutils.dynamic.soa.soa"]], "starch_consumption() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.starch_consumption"]], "starch_production() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.starch_production"]], "tag() (in module gsmmutils.dynamic.rhs)": [[4, "gsmmutils.dynamic.rhs.tag"]], "timestamps (gsmmutils.dynamic.soa.soa property)": [[4, "gsmmutils.dynamic.soa.soa.timestamps"]], "update_kinetics() (gsmmutils.dynamic.soa.soa method)": [[4, "gsmmutils.dynamic.soa.soa.update_kinetics"]], "biomass (class in gsmmutils.experimental.biomass)": [[5, "gsmmutils.experimental.Biomass.Biomass"]], "biomasscomponent (class in gsmmutils.experimental.biomasscomponent)": [[5, "gsmmutils.experimental.BiomassComponent.BiomassComponent"]], "expmatrix (class in gsmmutils.experimental.expmatrix)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix"]], "children (gsmmutils.experimental.biomasscomponent.biomasscomponent property)": [[5, "gsmmutils.experimental.BiomassComponent.BiomassComponent.children"]], "conditions (gsmmutils.experimental.expmatrix.expmatrix property)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.conditions"]], "get_biomass() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_biomass"]], "get_experimental_data() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_experimental_data"]], "get_growth_rate() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_growth_rate"]], "get_maximum_productivity() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_maximum_productivity"]], "get_substrate_uptake() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_substrate_uptake"]], "get_substrate_uptake_for_trial() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_substrate_uptake_for_trial"]], "get_substrate_uptake_from_biomass() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.get_substrate_uptake_from_biomass"]], "gsmmutils.experimental": [[5, "module-gsmmutils.experimental"]], "gsmmutils.experimental.biomass": [[5, "module-gsmmutils.experimental.Biomass"]], "gsmmutils.experimental.biomasscomponent": [[5, "module-gsmmutils.experimental.BiomassComponent"]], "gsmmutils.experimental.expmatrix": [[5, "module-gsmmutils.experimental.ExpMatrix"]], "load() (gsmmutils.experimental.biomass.biomass method)": [[5, "gsmmutils.experimental.Biomass.Biomass.load"]], "load() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.load"]], "parent (gsmmutils.experimental.biomasscomponent.biomasscomponent property)": [[5, "gsmmutils.experimental.BiomassComponent.BiomassComponent.parent"]], "remove_trials() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.remove_trials"]], "save() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.save"]], "set_exponential_phases() (gsmmutils.experimental.expmatrix.expmatrix method)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.set_exponential_phases"]], "standard_biomass (gsmmutils.experimental.biomass.biomass property)": [[5, "gsmmutils.experimental.Biomass.Biomass.standard_biomass"]], "stoichiometry (gsmmutils.experimental.biomasscomponent.biomasscomponent property)": [[5, "gsmmutils.experimental.BiomassComponent.BiomassComponent.stoichiometry"]], "substrate_uptake_days (gsmmutils.experimental.expmatrix.expmatrix property)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.substrate_uptake_days"]], "substrate_uptake_hours (gsmmutils.experimental.expmatrix.expmatrix property)": [[5, "gsmmutils.experimental.ExpMatrix.ExpMatrix.substrate_uptake_hours"]], "barplot() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.barplot"]], "boxplot() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.boxplot"]], "clustermap() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.clustermap"]], "generate_plot_for_data() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.generate_plot_for_data"]], "gsmmutils.graphics": [[6, "module-gsmmutils.graphics"]], "gsmmutils.graphics.plot": [[6, "module-gsmmutils.graphics.plot"]], "heatmap() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.heatmap"]], "hist() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.hist"]], "lineplot() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.lineplot"]], "plot_concentrations() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.plot_concentrations"]], "plot_trajectories() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.plot_trajectories"]], "plot_two_axis() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.plot_two_axis"]], "qqplot() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.qqplot"]], "surface() (in module gsmmutils.graphics.plot)": [[6, "gsmmutils.graphics.plot.surface"]], "gsmmutils.io": [[7, "module-gsmmutils.io"]], "gsmmutils.io.reader": [[7, "module-gsmmutils.io.reader"]], "gsmmutils.io.writer": [[7, "module-gsmmutils.io.writer"]], "read_csv() (in module gsmmutils.io.reader)": [[7, "gsmmutils.io.reader.read_csv"]], "read_excel() (in module gsmmutils.io.reader)": [[7, "gsmmutils.io.reader.read_excel"]], "read_matrix() (in module gsmmutils.io.reader)": [[7, "gsmmutils.io.reader.read_matrix"]], "read_simulation() (in module gsmmutils.io.reader)": [[7, "gsmmutils.io.reader.read_simulation"]], "write_matrix() (in module gsmmutils.io.writer)": [[7, "gsmmutils.io.writer.write_matrix"]], "write_simulation() (in module gsmmutils.io.writer)": [[7, "gsmmutils.io.writer.write_simulation"]], "write_specific_models() (in module gsmmutils.io.writer)": [[7, "gsmmutils.io.writer.write_specific_models"]], "modelvalidator (class in gsmmutils.model.model_validator)": [[8, "gsmmutils.model.model_validator.ModelValidator"]], "mymodel (class in gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.MyModel"]], "add_medium() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.add_medium"]], "add_reaction_string_to_dataframe() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.add_reaction_string_to_dataframe"]], "adjust_biomass() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.adjust_biomass"]], "adjust_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.adjust_precursors"]], "aerobic() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.aerobic"]], "aerobic_v2() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.aerobic_v2"]], "anaerobic() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.anaerobic"]], "apply_env_conditions_from_dict() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.apply_env_conditions_from_dict"]], "apply_env_conditions_from_excel() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.apply_env_conditions_from_excel"]], "atp_m() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.atp_m"]], "biomass_composition (gsmmutils.model.cobramodel.mymodel property)": [[8, "gsmmutils.model.COBRAmodel.MyModel.biomass_composition"]], "check_balance() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_balance"]], "check_balance() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.check_balance"]], "check_biomass() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.check_biomass"]], "check_biomass_production() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_biomass_production"]], "check_blocked_reactions() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_blocked_reactions"]], "check_energy_producing_cycles() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_energy_producing_cycles"]], "check_reactions_equal_metabolites() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_reactions_equal_metabolites"]], "check_sbc() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_sbc"]], "check_transport() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.check_transport"]], "check_unbounded_flux() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.check_unbounded_flux"]], "check_under_limit() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.check_under_limit"]], "compare_reacts() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.compare_reacts"]], "connectivity() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.connectivity"]], "copy() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.copy"]], "count_reactions_by_compartment() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.count_reactions_by_compartment"]], "create_demand() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_demand"]], "create_exchange() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_exchange"]], "create_exchange_transport() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_exchange_transport"]], "create_fluxes() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_fluxes"]], "create_fluxes_spreadsheet() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_fluxes_spreadsheet"]], "create_metabolite() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_metabolite"]], "create_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_reaction"]], "create_reporting_file() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_reporting_file"]], "create_sink() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_sink"]], "create_test_drains_to_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_test_drains_to_reaction"]], "create_transport() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_transport"]], "create_trnas_reactions() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.create_trnas_reactions"]], "define_medium() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.define_medium"]], "define_medium_quercus() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.define_medium_quercus"]], "delete_b_metabolites() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.delete_b_metabolites"]], "determine_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.determine_precursors"]], "evaluate_precursor() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.evaluate_precursor"]], "gene_essentially() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.gene_essentially"]], "get_bio_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_bio_precursors"]], "get_bio_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_bio_reaction"]], "get_exchanges() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_exchanges"]], "get_genes_pathways_map() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_genes_pathways_map"]], "get_metabolite() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_metabolite"]], "get_metabolite_by_name() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_metabolite_by_name"]], "get_metabolite_compartment() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.get_metabolite_compartment"]], "get_pathway_reactions_map() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_pathway_reactions_map"]], "get_pre_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_pre_precursors"]], "get_products() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_products"]], "get_reactants() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_reactants"]], "get_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_reaction"]], "get_reactions_nadh_nadph() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.get_reactions_nadh_nadph"]], "get_reactions_pathways_map() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.get_reactions_pathways_map"]], "get_transport_number() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.get_transport_number"]], "gsmmutils.model": [[8, "module-gsmmutils.model"]], "gsmmutils.model.cobramodel": [[8, "module-gsmmutils.model.COBRAmodel"]], "gsmmutils.model.model_validator": [[8, "module-gsmmutils.model.model_validator"]], "infer_biomass_from_model() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.infer_biomass_from_model"]], "load_model() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.load_model"]], "maximize() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.maximize"]], "merge_fluxes() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.merge_fluxes"]], "minimal_medium() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.minimal_medium"]], "minimize_uptake_sum() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.minimize_uptake_sum"]], "parse_genes() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.parse_genes"]], "parse_reactions_versions() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.parse_reactions_versions"]], "photorespiration_v1() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.photorespiration_v1"]], "photorespiration_v2() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.photorespiration_v2"]], "photosynthesis() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.photosynthesis"]], "react_without_gene() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.react_without_gene"]], "reset() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.reset"]], "revert_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.revert_reaction"]], "sample() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.sample"]], "save() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.save"]], "search_biomass() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.search_biomass"]], "set_compartments() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_compartments"]], "set_heterotrophy() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_heterotrophy"]], "set_mixotrophy() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_mixotrophy"]], "set_photoautotrophy() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_photoautotrophy"]], "set_prism_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_prism_reaction"]], "set_stoichiometry() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.set_stoichiometry"]], "setup_condition() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.setup_condition"]], "simulation_for_conditions() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.simulation_for_conditions"]], "summary() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.summary"]], "test_bio_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.test_bio_precursors"]], "test_e_precursors() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.test_e_precursors"]], "test_e_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.test_e_reaction"]], "test_reaction() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.test_reaction"]], "topological_analysis() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.topological_analysis"]], "undo() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.undo"]], "update_biomass() (in module gsmmutils.model.cobramodel)": [[8, "gsmmutils.model.COBRAmodel.update_biomass"]], "update_fluxes_spreadsheet() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.update_fluxes_spreadsheet"]], "validate() (gsmmutils.model.model_validator.modelvalidator method)": [[8, "gsmmutils.model.model_validator.ModelValidator.validate"]], "write() (gsmmutils.model.cobramodel.mymodel method)": [[8, "gsmmutils.model.COBRAmodel.MyModel.write"]], "blockprint() (in module gsmmutils.omics.task_evaluation)": [[9, "gsmmutils.omics.task_evaluation.blockPrint"]], "enableprint() (in module gsmmutils.omics.task_evaluation)": [[9, "gsmmutils.omics.task_evaluation.enablePrint"]], "global_thresholding() (in module gsmmutils.omics.omics_processing)": [[9, "gsmmutils.omics.omics_processing.global_thresholding"]], "gsmmutils.omics": [[9, "module-gsmmutils.omics"]], "gsmmutils.omics.omics_processing": [[9, "module-gsmmutils.omics.omics_processing"]], "gsmmutils.omics.task_evaluation": [[9, "module-gsmmutils.omics.task_evaluation"]], "gsmmutils.omics.troppo": [[9, "module-gsmmutils.omics.troppo"]], "gsmmutils.omics.troppo_integration": [[9, "module-gsmmutils.omics.troppo_integration"]], "integration_pipeline() (in module gsmmutils.omics.troppo)": [[9, "gsmmutils.omics.troppo.integration_pipeline"]], "local1_thresholding() (in module gsmmutils.omics.omics_processing)": [[9, "gsmmutils.omics.omics_processing.local1_thresholding"]], "local2_thresholding() (in module gsmmutils.omics.omics_processing)": [[9, "gsmmutils.omics.omics_processing.local2_thresholding"]], "print_model_details() (in module gsmmutils.omics.troppo)": [[9, "gsmmutils.omics.troppo.print_model_details"]], "read_task_file() (in module gsmmutils.omics.task_evaluation)": [[9, "gsmmutils.omics.task_evaluation.read_task_file"]], "reconstruct_context_specific_models() (in module gsmmutils.omics.troppo)": [[9, "gsmmutils.omics.troppo.reconstruct_context_specific_models"]], "reconstruction_function() (in module gsmmutils.omics.troppo)": [[9, "gsmmutils.omics.troppo.reconstruction_function"]], "reconstruction_function() (in module gsmmutils.omics.troppo_integration)": [[9, "gsmmutils.omics.troppo_integration.reconstruction_function"]], "task_eval() (in module gsmmutils.omics.task_evaluation)": [[9, "gsmmutils.omics.task_evaluation.task_eval"]], "threshold_strategy() (in module gsmmutils.omics.omics_processing)": [[9, "gsmmutils.omics.omics_processing.threshold_strategy"]], "thresholding_filter() (in module gsmmutils.omics.omics_processing)": [[9, "gsmmutils.omics.omics_processing.thresholding_filter"]], "troppo_integration() (in module gsmmutils.omics.troppo)": [[9, "gsmmutils.omics.troppo.troppo_integration"]], "troppo_omics_integration() (in module gsmmutils.omics.troppo_integration)": [[9, "gsmmutils.omics.troppo_integration.troppo_omics_integration"]], "write_result_jason() (in module gsmmutils.omics.task_evaluation)": [[9, "gsmmutils.omics.task_evaluation.write_result_jason"]], "statisticalanalysis (class in gsmmutils.stats.stats)": [[10, "gsmmutils.stats.stats.StatisticalAnalysis"]], "anova() (gsmmutils.stats.stats.statisticalanalysis method)": [[10, "gsmmutils.stats.stats.StatisticalAnalysis.anova"]], "get_correlation() (gsmmutils.stats.stats.statisticalanalysis method)": [[10, "gsmmutils.stats.stats.StatisticalAnalysis.get_correlation"]], "gsmmutils.stats": [[10, "module-gsmmutils.stats"]], "gsmmutils.stats.stats": [[10, "module-gsmmutils.stats.stats"]], "manova() (gsmmutils.stats.stats.statisticalanalysis method)": [[10, "gsmmutils.stats.stats.StatisticalAnalysis.manova"]], "print_table() (in module gsmmutils.stats.stats)": [[10, "gsmmutils.stats.stats.print_table"]], "dockerclient (class in gsmmutils.utils.remote)": [[11, "gsmmutils.utils.remote.DockerClient"]], "remote (class in gsmmutils.utils.remote)": [[11, "gsmmutils.utils.remote.Remote"]], "block_print() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.block_print"]], "car_gen() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.car_gen"]], "convert_mg_gdw_to_mmol_gdw() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.convert_mg_gDW_to_mmol_gDW"]], "convert_mg_gmm_to_mmol_gmm() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.convert_mg_gMM_to_mmol_gMM"]], "convert_mg_molmm_to_mmolm_gmm() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.convert_mg_molMM_to_mmolM_gMM"]], "convert_mmol_mol_to_g_molmm() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.convert_mmol_mol_to_g_molMM"]], "differential_reaction_capacity() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.differential_reaction_capacity"]], "enable_print() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.enable_print"]], "flux_change() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.flux_change"]], "get_average_uptake() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_average_uptake"]], "get_biomass_mass() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_biomass_mass"]], "get_caro_kinetics() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_caro_kinetics"]], "get_data_at_phase() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_data_at_phase"]], "get_element_in_biomass() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_element_in_biomass"]], "get_fixation() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_fixation"]], "get_growth_rate() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_growth_rate"]], "get_growth_rate_from_slope() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_growth_rate_from_slope"]], "get_light_kinetics() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_light_kinetics"]], "get_login_info() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_login_info"]], "get_maximum_productivity() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_maximum_productivity"]], "get_micmen_kinetics() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_micmen_kinetics"]], "get_molecular_weight() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_molecular_weight"]], "get_parameter_range() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_parameter_range"]], "get_precursors() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_precursors"]], "get_productivity() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_productivity"]], "get_uptake() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.get_uptake"]], "gsmmutils.utils": [[11, "module-gsmmutils.utils"]], "gsmmutils.utils.remote": [[11, "module-gsmmutils.utils.remote"]], "gsmmutils.utils.utils": [[11, "module-gsmmutils.utils.utils"]], "login() (gsmmutils.utils.remote.remote method)": [[11, "gsmmutils.utils.remote.Remote.login"]], "mp() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.mp"]], "nitrogen_quota() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.nitrogen_quota"]], "normalize() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.normalize"]], "phi() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.phi"]], "reaction_capacity() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.reaction_capacity"]], "run() (gsmmutils.utils.remote.remote method)": [[11, "gsmmutils.utils.remote.Remote.run"]], "run() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.run"]], "update_st() (in module gsmmutils.utils.utils)": [[11, "gsmmutils.utils.utils.update_st"]]}})